plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.2'
	id 'io.spring.dependency-management' version '1.1.2'
	id "com.github.davidmc24.gradle.plugin.avro" version "1.2.0"
}

group = 'com.chukhnov.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	gradlePluginPortal()
	maven {
		url "https://packages.confluent.io/maven"
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.apache.kafka:kafka-streams'
	implementation 'org.springframework.kafka:spring-kafka'

	implementation 'io.confluent:kafka-avro-serializer:7.3.1'
	implementation 'org.apache.avro:avro:1.10.2'
	implementation 'com.github.davidmc24.gradle.plugin:gradle-avro-plugin:1.5.0'
	implementation 'io.confluent:kafka-schema-registry-client:7.3.1'
	// https://mvnrepository.com/artifact/io.confluent/kafka-streams-avro-serde
	implementation 'io.confluent:kafka-streams-avro-serde:7.3.1'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
